generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id           String        @id @default(uuid())
  email        String        @unique
  password     String
  name         String?
  image        String?
  wallet       Wallet[]
  games        Game[]
  transactions Transaction[]
  createdAt    DateTime      @default(now())
}

model Wallet {
  id           String        @id @default(uuid())
  balance      Int           @default(500)
  userId       String        @unique
  user         User          @relation(fields: [userId], references: [id])
  transactions Transaction[]
}

model Game {
  id             String        @id @default(uuid())
  userId         String
  User           User          @relation(fields: [userId], references: [id])
  status         gameType      @default(Active)
  outcome        gameOutcome   @default(None)
  bets           Json
  generatedCards Json
  holdedCard     holdedType    @default(None)
  transaction    Transaction[]
  createdAt      DateTime      @default(now())
  updatedAT      DateTime      @updatedAt
}

model Transaction {
  id        String            @id @default(uuid())
  amount    Int
  type      transactionType
  status    transactionStatus @default(Pending)
  userId    String
  User      User              @relation(fields: [userId], references: [id])
  walletId  String
  Wallet    Wallet            @relation(fields: [walletId], references: [id])
  gameId    String?
  game      Game?             @relation(fields: [gameId], references: [id])
  updatedAt DateTime          @updatedAt
  createdAt DateTime          @default(now())
}

enum transactionType {
  Deposit
  Withdrawal
  BetWin
  BetLoss
}

enum gameType {
  Completed
  Active
}

enum holdedType {
  Card1
  Card2
  Card3
  Card4
  None
}

enum transactionStatus {
  Pending
  Completed
  Failed
}

enum gameOutcome {
  Won
  Lost
  None
}
